# vim: set ft=make noet ts=4 sw=4 ai tw=79 fdm=marker:
# Copyright 2019-2024 Nicolas Godinho <nicolas@godinho.me>
# SPDX-License-Identifier: MIT

# Snippet to load current repository make library files. DO NOT EDIT.
override .=$(if $(wildcard $2$1),$2$1,$(if $(filter 1/,$(words $(abspath $2))$(firstword $(abspath $2))),\
$(error could not find "$1" in current dir or in any parent dir up to root),$(call .,$1,../$2)))
include $(call .,ez.mk,)

VALUE_FROM_MAKE_SHELL_FUNCTION := $(shell echo OK)

define .ezmk.help_header ::=
This is a header example for the help message autogenerated by ezmk.
endef

define .ezmk.help_footer ::=
Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam ultrices sapien
euismod commodo scelerisque. Etiam est orci, aliquet nec pretium nec, viverra
sed turpis. Proin efficitur porttitor risus vehicula pulvinar. Etiam vel ipsum
nunc. Morbi ultricies metus neque, in rhoncus orci convallis sit amet. Sed
semper vel tellus vitae dictum. Vivamus lobortis sodales imperdiet.
endef

.PHONY: test-make-shell-function
test-make-shell-function:
	# Test that the `shell` Make function properly works.
	val=$(call .shquote,$(VALUE_FROM_MAKE_SHELL_FUNCTION))
	if [[ "$$val" != 'OK' ]]; then
	    msgerr "could not verify that VALUE_FROM_MAKE_SHELL_FUNCTION is set to OK."
	else
	    msgok "VALUE_FROM_MAKE_SHELL_FUNCTION is well set"
	fi

.PHONY: test-messages
test-messages:
	# Unroll a sequence of dummy messages to visually test the message display
	# functions.
	msgprefix_unset
	msg "This is a simple message."
	msginfo "This is an informational message."
	msgok "This is a message for success."
	msgsuccess "This is a success message."
	msgwarn "This is a warning message."
	msgfail "This is a failure message."
	msgerr "This is an error message."
	printf >&2 '%sFake answer.\n' "$$(msgprompt "This is a fake question?")"
	msg "This is a simple message."$$'\n'"With a second line to show proper text alignment."
	msginfo-<<END
	This is an informational message.
	With a second line to show proper text alignment.
	END
	msgwarn "This is a warning message."$$'\n'"With a second line to show proper text alignment."
	msgerr "This is an error message."$$'\n'"With a second line to show proper text alignment."
	msgok "This is a message for success."$$'\n'"With a second line to show proper text alignment."
	printf >&2 '%sFake answer.\n' "$$(msgprompt "This is a fake question?"$$'\n'"With a second line to show proper alignment?")"
	msgprefix_set 'Sample prefix'
	msg "This is a simple message with a message prefix."
	msgwarn "This is a warning message with a message prefix."
	msgerr "This is an error message with a message prefix."
	msgok "This is a message for success with a message prefix."
	printf >&2 '%sFake answer.\n' "$$(msgprompt "This is a fake question?")"
	msg "This is a simple message with a message prefix."$$'\n'"With a second line to show proper text alignment."
	msgwarn "This is a warning message with a message prefix."$$'\n'"With a second line to show proper text alignment."
	msgerr "This is an error message with a message prefix."$$'\n'"With a second line to show proper text alignment."
	msgok "This is a message for success with a message prefix."$$'\n'"With a second line to show proper text alignment."
	printf >&2 '%sFake answer.\n' "$$(msgprompt "This is a fake question?"$$'\n'"With a second line to show proper alignment?")"
